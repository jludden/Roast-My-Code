
type Query {
  allTodos: [Todo!]
  todosByCompletedFlag(completed: Boolean!): [Todo!]
  allTodoLists: [TodoList!]
  allComments: [Comment!]
  allCommentLists: [CommentList!] 
  findRepositoryByTitle(title: String!): Repository
  sayHello(name: String!): String! @resolver(name: "say_hello")
}

type Todo {
  title: String!
  completed: Boolean!
  list: TodoList
}

type TodoList {
  title: String!
  todos: [Todo] @relation
}

type Comment {
  text: String!
  lineNumber: Int
  selectedText: String
  author: User @relation
  createdAt: String
  updatedAt: String
  list: CommentList!
}

type CommentList {
  comments: [Comment!] @relation
  document: Document!
}

type Document {
  title: String!
  commentsList: [CommentList!] @relation
  repository: Repository!
}

type Repository {
  title: String! @unique
  documentsList: [Document!] @relation
}

type User {
  name: String!
  email: String
  githubId: String
  avatarUrl: String
  createdAt: String
  updatedAt: String
}
